#!gpxe
<%#
name: Kickstart default iPXE
snippet: false
model: ProvisioningTemplate
kind: iPXE
oses:
- CentOS
- CentOS_bonds_again
- CentOS_failed
- CentOSGC
- CentosOS_bonds
- RedHat
organizations:
- Default Organization
- Fritz1Org
- Fritz2Org
- Fritz3Org
- NewOrg
- OrgB
- OrgC
- OrgF
- OrgG
- this is very very very very very very very very very very very very very very very
  very very very long name
- Unassigned Organization
- WithOrgAdmin
locations:
- Fritz1Loc
- Fritz2Loc
- LocA
- NA/US/AWS
- WithHans
- WithHansAgain
%>
<%
  rhel_compatible = @host.operatingsystem.family == 'Redhat' && @host.operatingsystem.name != 'Fedora'
  is_fedora = @host.operatingsystem.name == 'Fedora'
  os_major = @host.operatingsystem.major.to_i
  os_minor = @host.operatingsystem.minor.to_i
  major = @host.operatingsystem.major.to_i
  iface = @host.provision_interface
  mac = @host.provision_interface.mac
  hostname = @host.name
  subnet = @host.subnet
  options = []

  if subnet.respond_to?(:dhcp_boot_mode?) && subnet.dhcp_boot_mode?
    static = ''
  else
    static_arg = 'static=yes'
    static = (@host.token.nil? ? '?' : '&') + static_arg
  end

  options.push("linksleep=#{subnet.nic_delay}") if subnet.nic_delay.present?

  stage2 = host_param('kickstart_liveimg') ? 'inst.stage2=' + medium_uri : ''

  if (is_fedora && os_major < 17) || (rhel_compatible && os_major < 7)
    options.push('ip=${netX/ip} netmask=${netX/netmask} gateway=${netX/gateway} dns=${dns}')
  else
    options.push("ip=${netX/ip}::${netX/gateway}:${netX/netmask}:#{hostname}:#{iface.identifier}:none nameserver=${dns}")
  end

  if iface.tag.present? && iface.attached_to.present?
    if (is_fedora && os_major < 17) || (rhel_compatible && os_major < 7)
      options.push("vlanid=#{iface.tag}")
    else
      options.push("vlan=vlan#{iface.tag}:#{iface.attached_to}")
    end
  end

  if !is_fedora && os_major >= 7 && host_param_true?('fips_enabled')
    options.push('fips=1')
  end
-%>
kernel <%= "#{@host.url_for_boot(:kernel)}" %> initrd=initrd.img ks=<%= foreman_url('provision')%><%= static %> inst.stage2=<%= medium_uri %> <%= stage2 %> ksdevice=<%= @host.mac %> network kssendmac ks.sendmac inst.ks.sendmac <%= options.join(' ') %>
initrd <%= "#{@host.url_for_boot(:initrd)}" %>
imgstat
sleep 2
boot